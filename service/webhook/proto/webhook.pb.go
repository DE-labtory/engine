// Code generated by protoc-gen-go. DO NOT EDIT.
// source: webhook.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	webhook.proto

It has these top-level messages:
	WebhookRequest
	WebhookResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type WebhookRequest struct {
	PayloadURL string `protobuf:"bytes,1,opt,name=payloadURL" json:"payloadURL,omitempty"`
}

func (m *WebhookRequest) Reset()                    { *m = WebhookRequest{} }
func (m *WebhookRequest) String() string            { return proto1.CompactTextString(m) }
func (*WebhookRequest) ProtoMessage()               {}
func (*WebhookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *WebhookRequest) GetPayloadURL() string {
	if m != nil {
		return m.PayloadURL
	}
	return ""
}

type WebhookResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *WebhookResponse) Reset()                    { *m = WebhookResponse{} }
func (m *WebhookResponse) String() string            { return proto1.CompactTextString(m) }
func (*WebhookResponse) ProtoMessage()               {}
func (*WebhookResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WebhookResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto1.RegisterType((*WebhookRequest)(nil), "proto.WebhookRequest")
	proto1.RegisterType((*WebhookResponse)(nil), "proto.WebhookResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Webhook service

type WebhookClient interface {
	Register(ctx context.Context, in *WebhookRequest, opts ...grpc.CallOption) (*WebhookResponse, error)
	Remove(ctx context.Context, in *WebhookRequest, opts ...grpc.CallOption) (*WebhookResponse, error)
}

type webhookClient struct {
	cc *grpc.ClientConn
}

func NewWebhookClient(cc *grpc.ClientConn) WebhookClient {
	return &webhookClient{cc}
}

func (c *webhookClient) Register(ctx context.Context, in *WebhookRequest, opts ...grpc.CallOption) (*WebhookResponse, error) {
	out := new(WebhookResponse)
	err := grpc.Invoke(ctx, "/proto.Webhook/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookClient) Remove(ctx context.Context, in *WebhookRequest, opts ...grpc.CallOption) (*WebhookResponse, error) {
	out := new(WebhookResponse)
	err := grpc.Invoke(ctx, "/proto.Webhook/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Webhook service

type WebhookServer interface {
	Register(context.Context, *WebhookRequest) (*WebhookResponse, error)
	Remove(context.Context, *WebhookRequest) (*WebhookResponse, error)
}

func RegisterWebhookServer(s *grpc.Server, srv WebhookServer) {
	s.RegisterService(&_Webhook_serviceDesc, srv)
}

func _Webhook_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Webhook/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServer).Register(ctx, req.(*WebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Webhook_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Webhook/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookServer).Remove(ctx, req.(*WebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Webhook_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Webhook",
	HandlerType: (*WebhookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _Webhook_Register_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Webhook_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "webhook.proto",
}

func init() { proto1.RegisterFile("webhook.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4f, 0x4d, 0xca,
	0xc8, 0xcf, 0xcf, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a, 0x06, 0x5c,
	0x7c, 0xe1, 0x10, 0xf1, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x39, 0x2e, 0xae, 0x82,
	0xc4, 0xca, 0x9c, 0xfc, 0xc4, 0x94, 0xd0, 0x20, 0x1f, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20,
	0x24, 0x11, 0x25, 0x6d, 0x2e, 0x7e, 0xb8, 0x8e, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09,
	0x2e, 0xf6, 0xdc, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0xa8, 0x7a, 0x18, 0xd7, 0xa8, 0x91, 0x91,
	0x8b, 0x1d, 0xaa, 0x5a, 0xc8, 0x9a, 0x8b, 0x23, 0x28, 0x35, 0x3d, 0xb3, 0xb8, 0x24, 0xb5, 0x48,
	0x48, 0x14, 0xe2, 0x0a, 0x3d, 0x54, 0xbb, 0xa5, 0xc4, 0xd0, 0x85, 0x21, 0x16, 0x28, 0x31, 0x08,
	0x59, 0x72, 0xb1, 0x05, 0xa5, 0xe6, 0xe6, 0x97, 0xa5, 0x92, 0xac, 0x35, 0x89, 0x0d, 0x2c, 0x61,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x39, 0xb4, 0x6b, 0x1d, 0x01, 0x01, 0x00, 0x00,
}
